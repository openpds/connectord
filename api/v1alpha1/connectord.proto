syntax = "proto3";

package connectord.v1alpha1;

option go_package = "github.com/openpds/connectord/api/v1alpha1;connectordv1alpha1";

service Connectord {
  rpc ListConnectors(ListConnectorsInput) returns (ListConnectorsOutput) {}
  rpc CreateTransfer(CreateTransferInput) returns (CreateTransferOutput) {}
  rpc CancelTransfer(CancelTransferInput) returns (CancelTransferOutput) {}
  rpc ConfirmTransfer(ConfirmTransferInput) returns (ConfirmTransferOutput) {}
}

message ListConnectorsInput {
  string name = 1;
}

message VarSpec {
    string name = 1;
    string type = 2;
    string default = 3;
    string desc = 4;
}

message SecretSpec {
    string name = 1;
    string type = 2;
    string desc = 3;
}

message Requirements {
    repeated VarSpec vars = 1;
    repeated SecretSpec secrets = 2;
}

message Connector {
  string id = 1;
  string name = 2;
  Requirements requirements = 3;
}

message ListConnectorsOutput {
    repeated Connector connectors = 1;
}

enum Channel {
    BANK = 0;
    MOBILE = 1;
}

message ReceivingMethod {
    string msisdn = 1;
    string account_number = 2;
}

message Var {
    string name = 1;
    oneof value {
           string string_value = 2;
           int64  int64_value = 3;
           int32  int32_value = 4;
           bool   bool_value = 5;
    }
}

message Provider {
    int64 id = 1;
    string name = 2;
}

message Gateway {
    int64 id = 1;
    string name = 2;
}

enum TransferStatus {
     COMPLETED = 0;
     REFUSED = 1;
}

message Transfer {
  int64 id = 1;
  string sending_amount = 2;
  string sending_currency = 3;
  string receiving_amount = 4;
  string receiving_currency = 5;
  string connector = 6;
  ReceivingMethod receiving_method = 7;
  Channel channel = 8;
  Provider provider = 9;
  Gateway gateway = 10;
  TransferStatus status = 11;
}

message CreateTransferInput {
  Transfer transfer = 1;
  repeated Var vars = 2;
  repeated Var secrets = 3;
}

message CreateTransferOutput {
  int64 id = 1;
}

message CancelTransferInput {
  string name = 1;
}

message CancelTransferOutput {
  string message = 1;
}

message ConfirmTransferInput {
  string name = 1;
}

message ConfirmTransferOutput {
  string message = 1;
}
